upstream dohproxy_backend {
  server 127.0.0.1:8053;
  
  least_conn;
  keepalive 30;
}

server {
  listen  443 ssl http2;
  server_name domain.com;

  access_log /var/log/nginx/access.log; # minimal;
  error_log off;
  ssl_certificate /etc/letsencrypt/live/domain.com/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/domain.com/privkey.pem; # managed by Certbot
  include /etc/nginx/tls.conf;

  ssl_stapling on;
  ssl_stapling_verify on;

  ssl_trusted_certificate /etc/letsencrypt/live/domain.com/chain.pem;
  # Assuming resolver is at :53, change accordingly.
  resolver 127.0.0.1;

  add_header Strict-Transport-Security "max-age=31536000" always;
  add_header Access-Control-Allow-Methods "GET, HEAD, POST";

  if ( $request_method !~ ^(GET|POST|HEAD)$ ) {
    return 501;
  }
  
  location / {
    deny all;
    root /tmp/NOEXIST;
    autoindex off;
  }
  ## this is to move dns-query to another location but breaks RFC(ietf)
  location = /hidden_location/dns-query {
    ## referenced on conf.d/00-rate-limits.conf
    limit_req zone=doh_limit burst=50 nodelay;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header Upgrade $http_upgrade;
    #proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_read_timeout 86400;
    proxy_hide_header Access-Control-Allow-Methods;
    proxy_hide_header X-Powered-By;
    proxy_set_header Host $http_host;
    proxy_set_header Connection "";
    #proxy_set_header X-Forwarded-For 127.0.0.1;
    proxy_http_version 1.1;
    proxy_redirect off;
    proxy_buffering off;
    proxy_pass http://dohproxy_backend/dns-query;
  }
  ## reject requests on the regular dns-query location
  location = /dns-query {
  return 404;
  
  }

}
server {
    if ($host = domain.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        listen [::]:80;

        server_name domain.com;
        return 404; # managed by Certbot

}
